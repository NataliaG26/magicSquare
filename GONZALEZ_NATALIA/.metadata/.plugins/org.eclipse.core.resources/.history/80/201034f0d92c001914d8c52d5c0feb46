package model;

public class CuadradoMagico {
	
	private int[][] size;
	private char start;
	private String orientation;
	private int magicNumber;
	
	public final static String NE = "NE";
	public final static String SE = "SE";
	public final static String NO = "NO";
	public final static String SO = "SO";
	
	public final static char A = 'a';
	public final static char B = 'b';
	public final static char C = 'c';
	public final static char D = 'd';
	
	public CuadradoMagico(int size, char start, String orientation) {
		this.size = new int[size][size];
		this.start = start;
		this.orientation = orientation;
		this.magicNumber = magicNumber(size);
	}
	
	public int[][] cuadrado(){
		
		int n = 0;
		int m = 0;
		int r = 0;
		switch(orientation) {
			case NE:
				n = -1;
				m = 1;
				r = -1;
				break;
			case SE:
				n = 1;
				m = 1;
				r = 1;
				break;
			case NO:
				n = -1;
				m = -1;
				r = -1;
				break;
			case SO:
				n = 1;
				m = -1;
				r = 1;
				break;
		}
		
		int i = 0;
		int j = 0;
		switch(start) {
			case A:
				i = 0;
				j = size.length/2;
				break;
			case B:
				i = size.length/2;
				j = 0;
				break;
			case C:
				i = size.length/2;
				j = size.length;
				break;
			case D:
				i = size.length;
				j = size.length/2;
				break;
		}
		
		for(int num = 1; num <= magicNumber; num++) {
			n += i;
			m +=j;
			
			if(n < 0) {
				n = size.length -1;
			}else if(m > size.length -1) {
				m = 0;
			}else if(n > size.length -1) {
				n = 0;
			}else if(m < 0) {
				m = size.length -1;
			}
			
			if(size[n][m] == 0) {
				size [n][m] = num;
				i = n;
				j = m;
			}else {
				n +=r;
				size[n][m] = num;
				i = n;
				j = m;
			}
		}
		return size;
	}
	
	
	
	private int magicNumber(int size) {
		return (size*((size*size)+1))/2;
	}
	
	public int getMagicNumber() {
		return magicNumber;
	}
	

}
