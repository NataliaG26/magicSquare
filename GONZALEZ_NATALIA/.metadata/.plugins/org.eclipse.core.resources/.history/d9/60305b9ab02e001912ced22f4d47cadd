package controller;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import model.CuadradoMagico;
import javafx.scene.control.ComboBox;

public class Controller {
	
	ObservableList<Character> startList = FXCollections.observableArrayList('a', 'b', 'c', 'd');
	ObservableList<String> orientationtList = FXCollections.observableArrayList("NE", "NO", "SE", "SO");
	
	@FXML
    private ImageView imageSize;

    @FXML
    private ImageView imageStart;

    @FXML
    private ImageView imageOrient;

    @FXML
    private TextField txtFSize;

    @FXML
    private ComboBox<Character> startBox;

    @FXML
    private ComboBox<String> orientationBox;

    @FXML
    private Button buttonOk;

    @FXML
    private GridPane gridPaneMatrix;
    
    private CuadradoMagico cuadro;
    
    @FXML
    private void initialize() {
    	
    	startBox.setItems(startList);
    	
    	orientationBox.setValue("Orientacion");
    	orientationBox.setItems(orientationtList);
    	
    }

    @FXML
    void okInformation(ActionEvent event) {
    	
    	gridPaneMatrix.getChildren().setAll();
    	int size = Integer.parseInt(txtFSize.getText());
    	String orientation = orientationBox.getItems();
    	cuadro = new CuadradoMagico(size, startBox, orientationBox);
    	gridPaneMatrix.setAlignment(Pos.CENTER);
    	gridPaneMatrix.setHgap(5);
    	gridPaneMatrix.setVgap(5);
    	int[][] sln = cuadro.cuadrado();
    	
    	for(int i = 0; i < size; i++) {
    		for(int j = 0; j < size; j++) {
    			gridPaneMatrix.getColumnConstraints().add(new ColumnConstraints(30));
    			Label label = new Label(sln[i][j]+"");
    			GridPane.setConstraints(label, j+1, i+1);
  				gridPaneMatrix.getChildren().addAll(label);
    			
    		}
    	  }
    	
    	}
    	
    }
    
